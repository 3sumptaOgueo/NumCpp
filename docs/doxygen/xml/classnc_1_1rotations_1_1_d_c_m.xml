<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classnc_1_1rotations_1_1_d_c_m" kind="class" language="C++" prot="public">
    <compoundname>nc::rotations::DCM</compoundname>
    <includes refid="_d_c_m_8hpp" local="no">DCM.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classnc_1_1rotations_1_1_d_c_m_1a75a392cc2db9f9fdcfd8e212d152c9ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>static NdArray&lt;double&gt; nc::rotations::DCM::eulerAngles</definition>
        <argsstring>(double roll, double pitch, double yaw)</argsstring>
        <name>eulerAngles</name>
        <param>
          <type>double</type>
          <declname>roll</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a direction cosine matrix that rotates according to the input euler angles</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>roll</parametername>
</parameternamelist>
<parameterdescription>
<para>euler roll angle in radians </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pitch</parametername>
</parameternamelist>
<parameterdescription>
<para>euler pitch angle in radians </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yaw</parametername>
</parameternamelist>
<parameterdescription>
<para>euler yaw angle in radians </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="59" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_d_c_m_1a7ad5acfeac4205b7ee348332cb7aeadd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>static NdArray&lt;double&gt; nc::rotations::DCM::eulerAngles</definition>
        <argsstring>(const NdArray&lt; double &gt; &amp;angles)</argsstring>
        <name>eulerAngles</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt; &amp;</type>
          <declname>angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a direction cosine matrix that rotates according to the input euler angles</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angles</parametername>
</parameternamelist>
<parameterdescription>
<para>euler roll, pitch, angles </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="73" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_d_c_m_1aeb6400855cfc4163e09f03b101fe2d92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>static NdArray&lt;double&gt; nc::rotations::DCM::eulerAxisAngle</definition>
        <argsstring>(const NdArray&lt; double &gt; &amp;inAxis, double inAngle)</argsstring>
        <name>eulerAxisAngle</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt; &amp;</type>
          <declname>inAxis</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a direction cosine matrix that rotates about the input axis by the input angle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inAxis</parametername>
</parameternamelist>
<parameterdescription>
<para>euler axis cartesian vector with x,y,z components </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>euler angle in radians </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="88" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_d_c_m_1a4da503d407f8ad563ec41364ff5b3b43" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>static NdArray&lt;double&gt; nc::rotations::DCM::eulerAxisAngle</definition>
        <argsstring>(const Vec3 &amp;inAxis, double inAngle)</argsstring>
        <name>eulerAxisAngle</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>inAxis</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a direction cosine matrix that rotates about the input axis by the input angle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inAxis</parametername>
</parameternamelist>
<parameterdescription>
<para>euler axis cartesian vector with x,y,z components </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>euler angle in radians </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="103" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_d_c_m_1ab229737433b6c93522aa38f0ad94ca50" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool nc::rotations::DCM::isValid</definition>
        <argsstring>(const NdArray&lt; double &gt; &amp;inArray) noexcept</argsstring>
        <name>isValid</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt; &amp;</type>
          <declname>inArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns whether the input array is a direction cosine matrix</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="118" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" bodystart="118" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_d_c_m_1a7679a0d5443e2abdee0c376ef5f6d1e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>static NdArray&lt;double&gt; nc::rotations::DCM::xRotation</definition>
        <argsstring>(double inAngle)</argsstring>
        <name>xRotation</name>
        <param>
          <type>double</type>
          <declname>inAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a direction cosine matrix that rotates about the x axis by the input angle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>(in radians) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="140" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_d_c_m_1a9c495cb1fc84c70042d652d84bcddea4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>static NdArray&lt;double&gt; nc::rotations::DCM::yRotation</definition>
        <argsstring>(double inAngle)</argsstring>
        <name>yRotation</name>
        <param>
          <type>double</type>
          <declname>inAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a direction cosine matrix that rotates about the x axis by the input angle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>(in radians) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="155" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_d_c_m_1aa0c71aecc70f9354665b0c81cdf366ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>static NdArray&lt;double&gt; nc::rotations::DCM::zRotation</definition>
        <argsstring>(double inAngle)</argsstring>
        <name>zRotation</name>
        <param>
          <type>double</type>
          <declname>inAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a direction cosine matrix that rotates about the x axis by the input angle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>(in radians) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="170" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" bodystart="170" bodyend="173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Factory methods for generating direction cosine matrices and vectors. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="28">
        <label>nc::rotations::DCM</label>
        <link refid="classnc_1_1rotations_1_1_d_c_m"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="46" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Rotations/DCM.hpp" bodystart="45" bodyend="174"/>
    <listofallmembers>
      <member refid="classnc_1_1rotations_1_1_d_c_m_1a75a392cc2db9f9fdcfd8e212d152c9ff" prot="public" virt="non-virtual"><scope>nc::rotations::DCM</scope><name>eulerAngles</name></member>
      <member refid="classnc_1_1rotations_1_1_d_c_m_1a7ad5acfeac4205b7ee348332cb7aeadd" prot="public" virt="non-virtual"><scope>nc::rotations::DCM</scope><name>eulerAngles</name></member>
      <member refid="classnc_1_1rotations_1_1_d_c_m_1aeb6400855cfc4163e09f03b101fe2d92" prot="public" virt="non-virtual"><scope>nc::rotations::DCM</scope><name>eulerAxisAngle</name></member>
      <member refid="classnc_1_1rotations_1_1_d_c_m_1a4da503d407f8ad563ec41364ff5b3b43" prot="public" virt="non-virtual"><scope>nc::rotations::DCM</scope><name>eulerAxisAngle</name></member>
      <member refid="classnc_1_1rotations_1_1_d_c_m_1ab229737433b6c93522aa38f0ad94ca50" prot="public" virt="non-virtual"><scope>nc::rotations::DCM</scope><name>isValid</name></member>
      <member refid="classnc_1_1rotations_1_1_d_c_m_1a7679a0d5443e2abdee0c376ef5f6d1e1" prot="public" virt="non-virtual"><scope>nc::rotations::DCM</scope><name>xRotation</name></member>
      <member refid="classnc_1_1rotations_1_1_d_c_m_1a9c495cb1fc84c70042d652d84bcddea4" prot="public" virt="non-virtual"><scope>nc::rotations::DCM</scope><name>yRotation</name></member>
      <member refid="classnc_1_1rotations_1_1_d_c_m_1aa0c71aecc70f9354665b0c81cdf366ce" prot="public" virt="non-virtual"><scope>nc::rotations::DCM</scope><name>zRotation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
