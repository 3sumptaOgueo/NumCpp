<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classnc_1_1image_processing_1_1_pixel" kind="class" language="C++" prot="public">
    <compoundname>nc::imageProcessing::Pixel</compoundname>
    <includes refid="_image_processing_8hpp" local="no">ImageProcessing.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>dtype</declname>
        <defname>dtype</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_pixel_1a0e6041f85e21f3b50981a1290a970e0a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
        <definition>int32 nc::imageProcessing::Pixel&lt; dtype &gt;::clusterId_</definition>
        <argsstring></argsstring>
        <name>clusterId_</name>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="60" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_pixel_1a44e1da2233006def5ed53a50bb18560d" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Pixel&lt; dtype &gt;::col_</definition>
        <argsstring></argsstring>
        <name>col_</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="62" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_pixel_1ab81d76adf1886121c77e116ce3e47e3b" prot="private" static="no" mutable="no">
        <type>dtype</type>
        <definition>dtype nc::imageProcessing::Pixel&lt; dtype &gt;::intensity_</definition>
        <argsstring></argsstring>
        <name>intensity_</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="63" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_pixel_1a6146a9bc8d61a1e67676b29be37d5dd0" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Pixel&lt; dtype &gt;::row_</definition>
        <argsstring></argsstring>
        <name>row_</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="61" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1a4a7e03f5f6fb7f5c9831618f6b8d299c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nc::imageProcessing::Pixel&lt; dtype &gt;::Pixel</definition>
        <argsstring>()=default</argsstring>
        <name>Pixel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>defualt constructor needed by containers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1a426469a990f63f7173234ecddb298b04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::imageProcessing::Pixel&lt; dtype &gt;::Pixel</definition>
        <argsstring>(uint32 inRow, uint32 inCol, dtype inIntensity) noexcept</argsstring>
        <name>Pixel</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>inRow</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>inCol</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>inIntensity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRow</parametername>
</parameternamelist>
<parameterdescription>
<para>pixel row </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inCol</parametername>
</parameternamelist>
<parameterdescription>
<para>pixel column </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inIntensity</parametername>
</parameternamelist>
<parameterdescription>
<para>pixel intensity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="80" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1a869747b6613987400d768479635c907b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
        <definition>int32 nc::imageProcessing::Pixel&lt; dtype &gt;::clusterId</definition>
        <argsstring>() const noexcept</argsstring>
        <name>clusterId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the cluster id that this pixel belongs to</para><para><simplesect kind="return"><para>cluster id </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="159" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1a1f43a2420fc23750e21c94d578474522" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Pixel&lt; dtype &gt;::col</definition>
        <argsstring>() const noexcept</argsstring>
        <name>col</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the pixel column</para><para><simplesect kind="return"><para>column </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="202" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="202" bodyend="205"/>
        <referencedby refid="classnc_1_1image_processing_1_1_cluster_1a9cab13be79b63d9151e60a798ca39cb5" compoundref="_image_processing_8hpp" startline="529" endline="562">nc::imageProcessing::Cluster&lt; dtype &gt;::addPixel</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1af48fc163306bef02484e8185e9c09d92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>dtype</type>
        <definition>dtype nc::imageProcessing::Pixel&lt; dtype &gt;::intensity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>intensity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the pixel intensity</para><para><simplesect kind="return"><para>intensity </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="214" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="214" bodyend="217"/>
        <referencedby refid="classnc_1_1image_processing_1_1_cluster_1a9cab13be79b63d9151e60a798ca39cb5" compoundref="_image_processing_8hpp" startline="529" endline="562">nc::imageProcessing::Cluster&lt; dtype &gt;::addPixel</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1a8301175b4093d3a1e5b9f43bc0673c8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::imageProcessing::Pixel&lt; dtype &gt;::operator!=</definition>
        <argsstring>(const Pixel&lt; dtype &gt; &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref>&lt; dtype &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>not equality operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="111" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1a592926833195d4f2587efef12e4b1148" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::imageProcessing::Pixel&lt; dtype &gt;::operator&lt;</definition>
        <argsstring>(const Pixel&lt; dtype &gt; &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref>&lt; dtype &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>less than operator for std::sort algorithm and std::set&lt;&gt;; NOTE: std::sort sorts in ascending order. Since I want to sort the centroids in descensing order, I am purposefully defining this operator backwards!</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="129" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="129" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1ad0aa7b54731c514b4599e723ab2e0afa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::imageProcessing::Pixel&lt; dtype &gt;::operator==</definition>
        <argsstring>(const Pixel&lt; dtype &gt; &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref>&lt; dtype &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>equality operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="96" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1a3a8fb91578395ef70a5f6038c4c48062" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::imageProcessing::Pixel&lt; dtype &gt;::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method Description: prints the <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref> object to the console </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="237" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1a14a430dd867f89a9eb6e112a7a5ce567" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Pixel&lt; dtype &gt;::row</definition>
        <argsstring>() const noexcept</argsstring>
        <name>row</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the pixel row</para><para><simplesect kind="return"><para>row </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="190" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="190" bodyend="193"/>
        <referencedby refid="classnc_1_1image_processing_1_1_cluster_1a9cab13be79b63d9151e60a798ca39cb5" compoundref="_image_processing_8hpp" startline="529" endline="562">nc::imageProcessing::Cluster&lt; dtype &gt;::addPixel</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1afb36475cace389ddcb52a85141416828" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::imageProcessing::Pixel&lt; dtype &gt;::setClusterId</definition>
        <argsstring>(int32 inClusterId)</argsstring>
        <name>setClusterId</name>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>inClusterId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets the cluster id that this pixel belongs to</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inClusterId</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="171" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="171" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_pixel_1ae47f279d2f0ba0921027e787e3773ee8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nc::imageProcessing::Pixel&lt; dtype &gt;::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the pixel information as a string</para><para><simplesect kind="return"><para>std::string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="226" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="226" bodyend="231"/>
        <references refid="namespacenc_1_1utils_1a2e3a14fbbce38b0f8710ea0d92ee2ffc" compoundref="_utils_8hpp" startline="69" endline="72">nc::utils::num2str</references>
        <referencedby refid="classnc_1_1image_processing_1_1_cluster_1aaa1ee55d0c47196847b8bb1a76258bd3" compoundref="_image_processing_8hpp" startline="571" endline="579">nc::imageProcessing::Cluster&lt; dtype &gt;::str</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnc_1_1image_processing_1_1_pixel_1a157a2e98ace3e2185af571a68e5a5b9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;inStream, const Pixel&lt; dtype &gt; &amp;inPixel)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>inStream</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref>&lt; dtype &gt; &amp;</type>
          <declname>inPixel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>osstream operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inStream</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inPixel</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ostream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="251" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="251" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds the information for a single pixel. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="19">
        <label>nc::imageProcessing::Pixel&lt; dtype &gt;</label>
        <link refid="classnc_1_1image_processing_1_1_pixel"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" line="57" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/ImageProcessing.hpp" bodystart="56" bodyend="256"/>
    <listofallmembers>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a869747b6613987400d768479635c907b" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>clusterId</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a0e6041f85e21f3b50981a1290a970e0a" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>clusterId_</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a1f43a2420fc23750e21c94d578474522" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>col</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a44e1da2233006def5ed53a50bb18560d" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>col_</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1af48fc163306bef02484e8185e9c09d92" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>intensity</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1ab81d76adf1886121c77e116ce3e47e3b" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>intensity_</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a8301175b4093d3a1e5b9f43bc0673c8e" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>operator!=</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a592926833195d4f2587efef12e4b1148" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>operator&lt;</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a157a2e98ace3e2185af571a68e5a5b9c" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>operator&lt;&lt;</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1ad0aa7b54731c514b4599e723ab2e0afa" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>operator==</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a4a7e03f5f6fb7f5c9831618f6b8d299c" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>Pixel</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a426469a990f63f7173234ecddb298b04" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>Pixel</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a3a8fb91578395ef70a5f6038c4c48062" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>print</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a14a430dd867f89a9eb6e112a7a5ce567" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>row</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1a6146a9bc8d61a1e67676b29be37d5dd0" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>row_</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1afb36475cace389ddcb52a85141416828" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>setClusterId</name></member>
      <member refid="classnc_1_1image_processing_1_1_pixel_1ae47f279d2f0ba0921027e787e3773ee8" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Pixel</scope><name>str</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
