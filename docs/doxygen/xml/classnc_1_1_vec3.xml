<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classnc_1_1_vec3" kind="class" language="C++" prot="public">
    <compoundname>nc::Vec3</compoundname>
    <includes refid="_vec3_8hpp" local="no">Vec3.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classnc_1_1_vec3_1a7f71dd08d58a1327739de6041e3362bb" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double nc::Vec3::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="54" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1_vec3_1a969dd1c195f4c78fc3a93292391e29c1" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double nc::Vec3::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="55" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1_vec3_1a0896ee691f46ce0bd669b869fe6acb41" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double nc::Vec3::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="56" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnc_1_1_vec3_1a12bace66cd4d205755cee98ac6d658fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::Vec3::Vec3</definition>
        <argsstring>() noexcept</argsstring>
        <name>Vec3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="62" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a4d20d8d7b40777677e83923055af35fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::Vec3::Vec3</definition>
        <argsstring>(double inX, double inY, double inZ) noexcept</argsstring>
        <name>Vec3</name>
        <param>
          <type>double</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inX</parametername>
</parameternamelist>
<parameterdescription>
<para>the x component </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inY</parametername>
</parameternamelist>
<parameterdescription>
<para>the y component </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inZ</parametername>
</parameternamelist>
<parameterdescription>
<para>the y component </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="76" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a4056d1e369726710d6f1049b277486dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::Vec3::Vec3</definition>
        <argsstring>(const std::initializer_list&lt; double &gt; &amp;inList)</argsstring>
        <name>Vec3</name>
        <param>
          <type>const std::initializer_list&lt; double &gt; &amp;</type>
          <declname>inList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inList</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="88" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="88" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a4668419f4c870900466d4aa198247767" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::Vec3::Vec3</definition>
        <argsstring>(const NdArray&lt; double &gt; &amp;ndArray)</argsstring>
        <name>Vec3</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt; &amp;</type>
          <declname>ndArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ndArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="106" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="106" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a523ca42cbdd088851cc5a299da988cee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::Vec3::angle</definition>
        <argsstring>(const Vec3 &amp;otherVec) const noexcept</argsstring>
        <name>angle</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>otherVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the angle between the two vectors</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>otherVec</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the angle in radians </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="125" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="125" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a4f3cfcbd67a402820cc8e0576dccd2e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 nc::Vec3::clampMagnitude</definition>
        <argsstring>(double maxLength) const noexcept</argsstring>
        <name>clampMagnitude</name>
        <param>
          <type>double</type>
          <declname>maxLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of the vector with its magnitude clamped to maxLength</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxLength</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="156" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="156" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1af8173f6e61e9a63beae3092fd8dc4378" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 nc::Vec3::cross</definition>
        <argsstring>(const Vec3 &amp;otherVec) const noexcept</argsstring>
        <name>cross</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>otherVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the cross product of the two vectors</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>otherVec</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the dot product </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="178" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="178" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a301f3edcb8cb17e7e3e5dbdd5255bdd2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::Vec3::distance</definition>
        <argsstring>(const Vec3 &amp;otherVec) const noexcept</argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>otherVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the distance between the two vectors</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>otherVec</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the distance (equivalent to (a - b).<ref refid="classnc_1_1_vec3_1a6c177e1f5c00584279a0527d3053dee8" kindref="member">norm()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="194" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1ac9f2bf549a4b800f140de060a0281a7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::Vec3::dot</definition>
        <argsstring>(const Vec3 &amp;otherVec) const noexcept</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>otherVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the dot product of the two vectors</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>otherVec</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the dot product </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="206" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1ab4878c8a4ebcd94fd0baf93059b50ac6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 nc::Vec3::lerp</definition>
        <argsstring>(const Vec3 &amp;otherVec, double t) const noexcept</argsstring>
        <name>lerp</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>otherVec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Linearly interpolates between two vectors</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>otherVec</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount to interpolate by (clamped from [0, 1]); </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="252" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="252" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a6c177e1f5c00584279a0527d3053dee8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::Vec3::norm</definition>
        <argsstring>() const noexcept</argsstring>
        <name>norm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the magnitude of the vector</para><para><simplesect kind="return"><para>magnitude of the vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="271" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a6356b462b11a156b923a7c79b9747c25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 nc::Vec3::normalize</definition>
        <argsstring>() const noexcept</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a new normalized <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></para><para><simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="282" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1aad142760da8d2b3493462b4542e42673" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::Vec3::operator!=</definition>
        <argsstring>(const Vec3 &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Not Equality operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="368" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a02ec360e4ebb7b4a6b629eedf8d24a2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
        <definition>Vec3&amp; nc::Vec3::operator*=</definition>
        <argsstring>(double scaler) noexcept</argsstring>
        <name>operator*=</name>
        <param>
          <type>double</type>
          <declname>scaler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar mulitplication</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scaler</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="440" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="440" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1afef859d21f4332089843c5d337c1ce01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
        <definition>Vec3&amp; nc::Vec3::operator+=</definition>
        <argsstring>(double scaler) noexcept</argsstring>
        <name>operator+=</name>
        <param>
          <type>double</type>
          <declname>scaler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the scaler to the vector</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scaler</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="380" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="380" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a2b1c4e63a7233fb56e2f037807dffb68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
        <definition>Vec3&amp; nc::Vec3::operator+=</definition>
        <argsstring>(const Vec3 &amp;rhs) noexcept</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the two vectors</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="395" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="395" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a70251860269c7cb5becbe988a0b2c48e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
        <definition>Vec3&amp; nc::Vec3::operator-=</definition>
        <argsstring>(double scaler) noexcept</argsstring>
        <name>operator-=</name>
        <param>
          <type>double</type>
          <declname>scaler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtracts the scaler from the vector</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scaler</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="410" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="410" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a208820649ed763a5dcc9405c4aa481f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
        <definition>Vec3&amp; nc::Vec3::operator-=</definition>
        <argsstring>(const Vec3 &amp;rhs) noexcept</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtracts the two vectors</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="425" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="425" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a431b2ac6af51bf59d804adbe5c8a7700" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
        <definition>Vec3&amp; nc::Vec3::operator/=</definition>
        <argsstring>(double scaler) noexcept</argsstring>
        <name>operator/=</name>
        <param>
          <type>double</type>
          <declname>scaler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar division</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scaler</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="455" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="455" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a2cc63855706091881f765b63dcf52c44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::Vec3::operator==</definition>
        <argsstring>(const Vec3 &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Equality operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="354" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="354" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1aaba2a76701fbf17582641cefeb513f1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 nc::Vec3::project</definition>
        <argsstring>(const Vec3 &amp;otherVec) const noexcept</argsstring>
        <name>project</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>otherVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Projects the vector onto the input vector</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>otherVec</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="294" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="294" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a6b598b3ea3e950081df48026b5132459" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::Vec3::toNdArray</definition>
        <argsstring>() const noexcept</argsstring>
        <name>toNdArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classnc_1_1_vec2" kindref="compound">Vec2</ref> as an <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref></para><para><simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="330" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="330" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a3af99e8df35bad1893f2d2a1a6082e21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nc::Vec3::toString</definition>
        <argsstring>() const noexcept</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classnc_1_1_vec2" kindref="compound">Vec2</ref> as a string</para><para><simplesect kind="return"><para>std::string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="317" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="317" bodyend="322"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classnc_1_1_vec3_1adc234f42c117f403d74118b241643f47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>static Vec3 nc::Vec3::back</definition>
        <argsstring>() noexcept</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the unit vector [0, 0, -1]</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="143" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a378aab1464927647b27f71d5934fa02b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>static Vec3 nc::Vec3::down</definition>
        <argsstring>() noexcept</argsstring>
        <name>down</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the unit vector [0, -1, 0]</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="217" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1ad7345116f8a9dff10bc270aead177281" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>static Vec3 nc::Vec3::forward</definition>
        <argsstring>() noexcept</argsstring>
        <name>forward</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the unit vector [0, 0, 1]</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="228" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a420ddd65124a23faf9a872ca05eebc6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>static Vec3 nc::Vec3::left</definition>
        <argsstring>() noexcept</argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the unit vector [-1, 0, 0]</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="239" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1a97f256a22ee3c5db29c484f2a3c6458e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>static Vec3 nc::Vec3::right</definition>
        <argsstring>() noexcept</argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the unit vector [1, 0, 0]</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="306" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="306" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_vec3_1aa60cf66defb2fcf04fc989c0e1f07f7e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>static Vec3 nc::Vec3::up</definition>
        <argsstring>() noexcept</argsstring>
        <name>up</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the unit vector [0, 1, 0]</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="342" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="342" bodyend="345"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds a 3D vector. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="40">
        <label>nc::Vec3</label>
        <link refid="classnc_1_1_vec3"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" line="51" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Vector/Vec3.hpp" bodystart="50" bodyend="462"/>
    <listofallmembers>
      <member refid="classnc_1_1_vec3_1a523ca42cbdd088851cc5a299da988cee" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>angle</name></member>
      <member refid="classnc_1_1_vec3_1adc234f42c117f403d74118b241643f47" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>back</name></member>
      <member refid="classnc_1_1_vec3_1a4f3cfcbd67a402820cc8e0576dccd2e4" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>clampMagnitude</name></member>
      <member refid="classnc_1_1_vec3_1af8173f6e61e9a63beae3092fd8dc4378" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>cross</name></member>
      <member refid="classnc_1_1_vec3_1a301f3edcb8cb17e7e3e5dbdd5255bdd2" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>distance</name></member>
      <member refid="classnc_1_1_vec3_1ac9f2bf549a4b800f140de060a0281a7e" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>dot</name></member>
      <member refid="classnc_1_1_vec3_1a378aab1464927647b27f71d5934fa02b" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>down</name></member>
      <member refid="classnc_1_1_vec3_1ad7345116f8a9dff10bc270aead177281" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>forward</name></member>
      <member refid="classnc_1_1_vec3_1a420ddd65124a23faf9a872ca05eebc6f" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>left</name></member>
      <member refid="classnc_1_1_vec3_1ab4878c8a4ebcd94fd0baf93059b50ac6" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>lerp</name></member>
      <member refid="classnc_1_1_vec3_1a6c177e1f5c00584279a0527d3053dee8" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>norm</name></member>
      <member refid="classnc_1_1_vec3_1a6356b462b11a156b923a7c79b9747c25" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>normalize</name></member>
      <member refid="classnc_1_1_vec3_1aad142760da8d2b3493462b4542e42673" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>operator!=</name></member>
      <member refid="classnc_1_1_vec3_1a02ec360e4ebb7b4a6b629eedf8d24a2f" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>operator*=</name></member>
      <member refid="classnc_1_1_vec3_1afef859d21f4332089843c5d337c1ce01" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>operator+=</name></member>
      <member refid="classnc_1_1_vec3_1a2b1c4e63a7233fb56e2f037807dffb68" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>operator+=</name></member>
      <member refid="classnc_1_1_vec3_1a70251860269c7cb5becbe988a0b2c48e" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>operator-=</name></member>
      <member refid="classnc_1_1_vec3_1a208820649ed763a5dcc9405c4aa481f2" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>operator-=</name></member>
      <member refid="classnc_1_1_vec3_1a431b2ac6af51bf59d804adbe5c8a7700" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>operator/=</name></member>
      <member refid="classnc_1_1_vec3_1a2cc63855706091881f765b63dcf52c44" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>operator==</name></member>
      <member refid="classnc_1_1_vec3_1aaba2a76701fbf17582641cefeb513f1c" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>project</name></member>
      <member refid="classnc_1_1_vec3_1a97f256a22ee3c5db29c484f2a3c6458e" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>right</name></member>
      <member refid="classnc_1_1_vec3_1a6b598b3ea3e950081df48026b5132459" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>toNdArray</name></member>
      <member refid="classnc_1_1_vec3_1a3af99e8df35bad1893f2d2a1a6082e21" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>toString</name></member>
      <member refid="classnc_1_1_vec3_1aa60cf66defb2fcf04fc989c0e1f07f7e" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>up</name></member>
      <member refid="classnc_1_1_vec3_1a12bace66cd4d205755cee98ac6d658fa" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>Vec3</name></member>
      <member refid="classnc_1_1_vec3_1a4d20d8d7b40777677e83923055af35fa" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>Vec3</name></member>
      <member refid="classnc_1_1_vec3_1a4056d1e369726710d6f1049b277486dd" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>Vec3</name></member>
      <member refid="classnc_1_1_vec3_1a4668419f4c870900466d4aa198247767" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>Vec3</name></member>
      <member refid="classnc_1_1_vec3_1a7f71dd08d58a1327739de6041e3362bb" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>x</name></member>
      <member refid="classnc_1_1_vec3_1a969dd1c195f4c78fc3a93292391e29c1" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>y</name></member>
      <member refid="classnc_1_1_vec3_1a0896ee691f46ce0bd669b869fe6acb41" prot="public" virt="non-virtual"><scope>nc::Vec3</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
