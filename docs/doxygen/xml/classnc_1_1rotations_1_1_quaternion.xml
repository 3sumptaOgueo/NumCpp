<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classnc_1_1rotations_1_1_quaternion" kind="class" language="C++" prot="public">
    <compoundname>nc::rotations::Quaternion</compoundname>
    <includes refid="_rotations_8hpp" local="no">Rotations.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnc_1_1rotations_1_1_quaternion_1ac5bfff33006b91593264660913a08786" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nc::rotations::Quaternion::data_[4]</definition>
        <argsstring>[4]</argsstring>
        <name>data_</name>
        <initializer>= { 0.0, 0.0, 0.0, 1.0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="56" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ae9d47af3f78d727f62588a0f209f01f1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::rotations::Quaternion::normalize</definition>
        <argsstring>() noexcept</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>renormalizes the quaternion </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="62" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="62" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nc::rotations::Quaternion::Quaternion</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>Quaternion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default Constructor, not super usefull on its own </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="76" column="1"/>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1aafb38c20ae954808d18179e227223bd9" compoundref="_rotations_8hpp" startline="129" endline="148">angleAxisRotation</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ade406544e8360506bb77102d17b14e61" compoundref="_rotations_8hpp" startline="208" endline="211">conjugate</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ae093d333b66b63eeef5704be4a374af2" compoundref="_rotations_8hpp" startline="232" endline="235">identity</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a2006b918951028c977fd975e63c486ab" compoundref="_rotations_8hpp" startline="284" endline="350">fromDCM</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a314478702a3da52f2be3f422057d8732" compoundref="_rotations_8hpp" startline="362" endline="387">nlerp</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a7a39f199e4d1ad773b93c69e66ae0415" compoundref="_rotations_8hpp" startline="456" endline="502">slerp</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a53c84fdd06a1f980c7c74a185d568156" compoundref="_rotations_8hpp" startline="657" endline="660">operator+</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ad6eb2370d77e01a944c4b32a48966e76" compoundref="_rotations_8hpp" startline="691" endline="694">operator-</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1adad6ca92266f6090930addc585900805" compoundref="_rotations_8hpp" startline="725" endline="728">operator*</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ab054e067fc333a48582e291f95120866" compoundref="_rotations_8hpp" startline="822" endline="825">operator/</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a3ba2fb2c68554ec78a0957dc1fd7752d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::rotations::Quaternion::Quaternion</definition>
        <argsstring>(double inI, double inJ, double inK, double inS) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>double</type>
          <declname>inI</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inJ</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inK</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inI</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inJ</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inS</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="87" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="87" bodyend="94"/>
        <references refid="namespacenc_1a381304c3932800f38265d6486318d19e" compoundref="_methods_8hpp" startline="6361" endline="6364">nc::norm</references>
        <references refid="namespacenc_1acb264011e6e6cd182cc47f67018a6b3c" compoundref="_methods_8hpp" startline="7794" endline="7797">nc::sqrt</references>
        <references refid="namespacenc_1_1utils_1aa83b87460956ee562b1ecaad9e0bb0f1" compoundref="_utils_8hpp" startline="82" endline="85">nc::utils::sqr</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1addcc7fb7b4acd4201e7f5b90ef207f4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::rotations::Quaternion::Quaternion</definition>
        <argsstring>(const NdArray&lt; double &gt; &amp;inArray)</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt; &amp;</type>
          <declname>inArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inArray</parametername>
</parameternamelist>
<parameterdescription>
<para>(size = 4) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="103" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="103" bodyend="117"/>
        <references refid="classnc_1_1_nd_array_1a6871de7968fa26f32d9c43167cd66131" compoundref="_nd_array_8hpp" startline="3197" endline="3200">nc::NdArray&lt; dtype &gt;::size</references>
        <references refid="namespacenc_1a381304c3932800f38265d6486318d19e" compoundref="_methods_8hpp" startline="6361" endline="6364">nc::norm</references>
        <references refid="namespacenc_1acb264011e6e6cd182cc47f67018a6b3c" compoundref="_methods_8hpp" startline="7794" endline="7797">nc::sqrt</references>
        <references refid="namespacenc_1a3d58d998049ad0356de1a6b8ad81c72d" compoundref="_methods_8hpp" startline="7833" endline="7836">nc::square</references>
        <references refid="namespacenc_1abbe8cdd4ceb0820083d1f57001d2f01c" compoundref="_methods_8hpp" startline="7922" endline="7925">nc::sum</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a1ed072758066ed454d9ba0452dc5a2d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::rotations::Quaternion::angularVelocity</definition>
        <argsstring>(const Quaternion &amp;inQuat2, double inTime) const noexcept</argsstring>
        <name>angularVelocity</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>angular velocity vector between the two quaternions. The norm of the array is the magnitude</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inQuat2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inTime</parametername>
</parameternamelist>
<parameterdescription>
<para>(seperation time) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="196" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="196" bodyend="199"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ab7905c39ef162eb7667abcd3131430ea" compoundref="_rotations_8hpp" startline="161" endline="184">angularVelocity</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ade406544e8360506bb77102d17b14e61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion nc::rotations::Quaternion::conjugate</definition>
        <argsstring>() const noexcept</argsstring>
        <name>conjugate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>quaternion conjugate</para><para><simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="208" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="208" bodyend="211"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a5a661b367dff916e8bdb5e28ac608ecd" compoundref="_rotations_8hpp" startline="220" endline="223">i</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1acb62c703a1f96333bf76ad0735cb8b97" compoundref="_rotations_8hpp" startline="257" endline="260">j</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1aa2eee61d3a428a558f28d1bb6cc6a048" compoundref="_rotations_8hpp" startline="269" endline="272">k</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a075b6f1befef247f5d638c91e1a451fd" compoundref="_rotations_8hpp" startline="441" endline="444">s</references>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a9b0634474b2ff27f9443ba256ea00ab1" compoundref="_rotations_8hpp" startline="244" endline="248">inverse</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a859df40774ccff755560604b930c934d" compoundref="_rotations_8hpp" startline="836" endline="839">operator/=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a5a661b367dff916e8bdb5e28ac608ecd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::rotations::Quaternion::i</definition>
        <argsstring>() const noexcept</argsstring>
        <name>i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the i component</para><para><simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="220" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="220" bodyend="223"/>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1aafb38c20ae954808d18179e227223bd9" compoundref="_rotations_8hpp" startline="129" endline="148">angleAxisRotation</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ade406544e8360506bb77102d17b14e61" compoundref="_rotations_8hpp" startline="208" endline="211">conjugate</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a314478702a3da52f2be3f422057d8732" compoundref="_rotations_8hpp" startline="362" endline="387">nlerp</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ad03a97f148be61e687944af11fe45c99" compoundref="_rotations_8hpp" startline="525" endline="531">str</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a32d6c7cf2ff12d988e169fd936aaf397" compoundref="_rotations_8hpp" startline="540" endline="560">toDCM</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a9b0634474b2ff27f9443ba256ea00ab1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion nc::rotations::Quaternion::inverse</definition>
        <argsstring>() const noexcept</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>quaternion inverse</para><para><simplesect kind="return"><para>Quaterion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="244" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="244" bodyend="248"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ade406544e8360506bb77102d17b14e61" compoundref="_rotations_8hpp" startline="208" endline="211">conjugate</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1acb62c703a1f96333bf76ad0735cb8b97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::rotations::Quaternion::j</definition>
        <argsstring>() const noexcept</argsstring>
        <name>j</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the j component</para><para><simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="257" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="257" bodyend="260"/>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1aafb38c20ae954808d18179e227223bd9" compoundref="_rotations_8hpp" startline="129" endline="148">angleAxisRotation</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ade406544e8360506bb77102d17b14e61" compoundref="_rotations_8hpp" startline="208" endline="211">conjugate</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a314478702a3da52f2be3f422057d8732" compoundref="_rotations_8hpp" startline="362" endline="387">nlerp</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ad03a97f148be61e687944af11fe45c99" compoundref="_rotations_8hpp" startline="525" endline="531">str</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a32d6c7cf2ff12d988e169fd936aaf397" compoundref="_rotations_8hpp" startline="540" endline="560">toDCM</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1aa2eee61d3a428a558f28d1bb6cc6a048" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::rotations::Quaternion::k</definition>
        <argsstring>() const noexcept</argsstring>
        <name>k</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the k component</para><para><simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="269" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="269" bodyend="272"/>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1aafb38c20ae954808d18179e227223bd9" compoundref="_rotations_8hpp" startline="129" endline="148">angleAxisRotation</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ade406544e8360506bb77102d17b14e61" compoundref="_rotations_8hpp" startline="208" endline="211">conjugate</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a314478702a3da52f2be3f422057d8732" compoundref="_rotations_8hpp" startline="362" endline="387">nlerp</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ad03a97f148be61e687944af11fe45c99" compoundref="_rotations_8hpp" startline="525" endline="531">str</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a32d6c7cf2ff12d988e169fd936aaf397" compoundref="_rotations_8hpp" startline="540" endline="560">toDCM</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ab055510c1338490b957de867cecaf790" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion nc::rotations::Quaternion::nlerp</definition>
        <argsstring>(const Quaternion &amp;inQuat2, double inPercent) const</argsstring>
        <name>nlerp</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>linearly interpolates between the two quaternions</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inQuat2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inPercent</parametername>
</parameternamelist>
<parameterdescription>
<para>(0, 1) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="398" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="398" bodyend="401"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a314478702a3da52f2be3f422057d8732" compoundref="_rotations_8hpp" startline="362" endline="387">nlerp</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1adcf57fd29d62e19f5c764750262ff7c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::rotations::Quaternion::operator!=</definition>
        <argsstring>(const Quaternion &amp;inRhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>equality operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="643" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="643" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1adad6ca92266f6090930addc585900805" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion nc::rotations::Quaternion::operator*</definition>
        <argsstring>(const Quaternion &amp;inRhs) const noexcept</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplication operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="725" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="725" bodyend="728"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ad63920fa01f5bd4949c0fbb3ff7c7137" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion nc::rotations::Quaternion::operator*</definition>
        <argsstring>(double inScalar) const noexcept</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>inScalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplication operator, only useful for multiplying by negative 1, all others will be renormalized back out</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inScalar</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="740" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="740" bodyend="743"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1af3870229595bf00f7afe33f186fbb349" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::rotations::Quaternion::operator*</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inVec) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplication operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inVec</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="755" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="755" bodyend="765"/>
        <references refid="classnc_1_1_nd_array_1a6871de7968fa26f32d9c43167cd66131" compoundref="_nd_array_8hpp" startline="3197" endline="3200">nc::NdArray&lt; dtype &gt;::size</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a32d6c7cf2ff12d988e169fd936aaf397" compoundref="_rotations_8hpp" startline="540" endline="560">toDCM</references>
        <references refid="classnc_1_1_nd_array_1a13e5756a193d375c0b52e5929a41ca2f" compoundref="_nd_array_8hpp" startline="1719" endline="1751">nc::NdArray&lt; dtype &gt;::dot</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1aaaa8a1bd7130e7ce6a819284584a84c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
        <definition>Quaternion&amp; nc::rotations::Quaternion::operator*=</definition>
        <argsstring>(const Quaternion &amp;inRhs) noexcept</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplication assignment operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="776" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="776" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a17636913a3a1e810a81a558dc986fd54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
        <definition>Quaternion&amp; nc::rotations::Quaternion::operator*=</definition>
        <argsstring>(double inScalar) noexcept</argsstring>
        <name>operator*=</name>
        <param>
          <type>double</type>
          <declname>inScalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplication operator, only useful for multiplying by negative 1, all others will be renormalized back out</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inScalar</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="802" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="802" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a53c84fdd06a1f980c7c74a185d568156" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion nc::rotations::Quaternion::operator+</definition>
        <argsstring>(const Quaternion &amp;inRhs) const noexcept</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>addition operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="657" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="657" bodyend="660"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1af2b75597d538e55cfdd1215c35c9c6fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
        <definition>Quaternion&amp; nc::rotations::Quaternion::operator+=</definition>
        <argsstring>(const Quaternion &amp;inRhs) noexcept</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>addition assignment operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="671" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="671" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ad6eb2370d77e01a944c4b32a48966e76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion nc::rotations::Quaternion::operator-</definition>
        <argsstring>(const Quaternion &amp;inRhs) const noexcept</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>subtraction operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="691" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="691" bodyend="694"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a60f1f33144c887cde1338fd80183638f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
        <definition>Quaternion&amp; nc::rotations::Quaternion::operator-=</definition>
        <argsstring>(const Quaternion &amp;inRhs) noexcept</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>subtraction assignment operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="705" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="705" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ab054e067fc333a48582e291f95120866" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion nc::rotations::Quaternion::operator/</definition>
        <argsstring>(const Quaternion &amp;inRhs) const noexcept</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>division operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="822" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="822" bodyend="825"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a859df40774ccff755560604b930c934d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
        <definition>Quaternion&amp; nc::rotations::Quaternion::operator/=</definition>
        <argsstring>(const Quaternion &amp;inRhs) noexcept</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>division assignment operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="836" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="836" bodyend="839"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ade406544e8360506bb77102d17b14e61" compoundref="_rotations_8hpp" startline="208" endline="211">conjugate</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a82f40acb2292256faffab2b88aa38208" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::rotations::Quaternion::operator==</definition>
        <argsstring>(const Quaternion &amp;inRhs) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inRhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>equality operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inRhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="626" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="626" bodyend="632"/>
        <references refid="namespacenc_1_1utils_1ab8f33a7e18654f6870deaa8f9c038195" compoundref="_utils_8hpp" startline="52" endline="59">nc::utils::essentiallyEqual</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a44994f000aba8de9f11a169a62782ebd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::rotations::Quaternion::print</definition>
        <argsstring>() const noexcept</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints the <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> to the console </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="407" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ac0d338fe7e9bb4a3a9ab2386f3f4f7c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::rotations::Quaternion::rotate</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inVector) const</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rotate a vector using the quaternion</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inVector</parametername>
</parameternamelist>
<parameterdescription>
<para>(cartesian vector with x,y,z components) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> (cartesian vector with x,y,z components) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="422" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="422" bodyend="432"/>
        <references refid="classnc_1_1_nd_array_1a6871de7968fa26f32d9c43167cd66131" compoundref="_nd_array_8hpp" startline="3197" endline="3200">nc::NdArray&lt; dtype &gt;::size</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a075b6f1befef247f5d638c91e1a451fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::rotations::Quaternion::s</definition>
        <argsstring>() const noexcept</argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the s component</para><para><simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="441" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="441" bodyend="444"/>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1aafb38c20ae954808d18179e227223bd9" compoundref="_rotations_8hpp" startline="129" endline="148">angleAxisRotation</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ade406544e8360506bb77102d17b14e61" compoundref="_rotations_8hpp" startline="208" endline="211">conjugate</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a314478702a3da52f2be3f422057d8732" compoundref="_rotations_8hpp" startline="362" endline="387">nlerp</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ad03a97f148be61e687944af11fe45c99" compoundref="_rotations_8hpp" startline="525" endline="531">str</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a32d6c7cf2ff12d988e169fd936aaf397" compoundref="_rotations_8hpp" startline="540" endline="560">toDCM</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a687155cd6469c095941b94a738119da9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion nc::rotations::Quaternion::slerp</definition>
        <argsstring>(const Quaternion &amp;inQuat2, double inPercent) const</argsstring>
        <name>slerp</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>spherical linear interpolates between the two quaternions</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inQuat2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inPercent</parametername>
</parameternamelist>
<parameterdescription>
<para>(0, 1) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="513" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="513" bodyend="516"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a7a39f199e4d1ad773b93c69e66ae0415" compoundref="_rotations_8hpp" startline="456" endline="502">slerp</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ad03a97f148be61e687944af11fe45c99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nc::rotations::Quaternion::str</definition>
        <argsstring>() const noexcept</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the quaternion as a string representation</para><para><simplesect kind="return"><para>std::string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="525" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="525" bodyend="531"/>
        <references refid="namespacenc_1_1utils_1a2e3a14fbbce38b0f8710ea0d92ee2ffc" compoundref="_utils_8hpp" startline="69" endline="72">nc::utils::num2str</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a5a661b367dff916e8bdb5e28ac608ecd" compoundref="_rotations_8hpp" startline="220" endline="223">i</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1acb62c703a1f96333bf76ad0735cb8b97" compoundref="_rotations_8hpp" startline="257" endline="260">j</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1aa2eee61d3a428a558f28d1bb6cc6a048" compoundref="_rotations_8hpp" startline="269" endline="272">k</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a075b6f1befef247f5d638c91e1a451fd" compoundref="_rotations_8hpp" startline="441" endline="444">s</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a32d6c7cf2ff12d988e169fd936aaf397" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::rotations::Quaternion::toDCM</definition>
        <argsstring>() const noexcept</argsstring>
        <name>toDCM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the direction cosine matrix</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="540" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="540" bodyend="560"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a5a661b367dff916e8bdb5e28ac608ecd" compoundref="_rotations_8hpp" startline="220" endline="223">i</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1acb62c703a1f96333bf76ad0735cb8b97" compoundref="_rotations_8hpp" startline="257" endline="260">j</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1aa2eee61d3a428a558f28d1bb6cc6a048" compoundref="_rotations_8hpp" startline="269" endline="272">k</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a075b6f1befef247f5d638c91e1a451fd" compoundref="_rotations_8hpp" startline="441" endline="444">s</references>
        <references refid="namespacenc_1_1utils_1aa83b87460956ee562b1ecaad9e0bb0f1" compoundref="_utils_8hpp" startline="82" endline="85">nc::utils::sqr</references>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1af3870229595bf00f7afe33f186fbb349" compoundref="_rotations_8hpp" startline="755" endline="765">operator*</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_d_c_m_1a7a11261d59892e485106cb0f521c807e" compoundref="_rotations_8hpp" startline="873" endline="883">nc::rotations::DCM&lt; dtype &gt;::angleAxisRotation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a4a11c1c0daf982f9367e4541e5735e71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::rotations::Quaternion::toNdArray</definition>
        <argsstring>() const</argsstring>
        <name>toNdArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the quaternion as an <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref></para><para><simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="569" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="569" bodyend="573"/>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a7a39f199e4d1ad773b93c69e66ae0415" compoundref="_rotations_8hpp" startline="456" endline="502">slerp</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1aafb38c20ae954808d18179e227223bd9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>static Quaternion nc::rotations::Quaternion::angleAxisRotation</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inAxis, double inAngle)</argsstring>
        <name>angleAxisRotation</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inAxis</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a quaternion to rotate about the input axis by the input angle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inAxis</parametername>
</parameternamelist>
<parameterdescription>
<para>(x,y,z vector components) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>(radians) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="129" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="129" bodyend="148"/>
        <references refid="classnc_1_1_nd_array_1a6871de7968fa26f32d9c43167cd66131" compoundref="_nd_array_8hpp" startline="3197" endline="3200">nc::NdArray&lt; dtype &gt;::size</references>
        <references refid="classnc_1_1_nd_array_1a9a8b5063ec64c9d0d9afdce057db77ea" compoundref="_nd_array_8hpp" startline="2308" endline="2360">nc::NdArray&lt; dtype &gt;::norm</references>
        <references refid="classnc_1_1_nd_array_1a4f5da296a91f836fa7627fad29828117" compoundref="_nd_array_8hpp" startline="1892" endline="1904">nc::NdArray&lt; dtype &gt;::item</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a5a661b367dff916e8bdb5e28ac608ecd" compoundref="_rotations_8hpp" startline="220" endline="223">i</references>
        <references refid="namespacenc_1a0d66dc207eb871bba26bff4838992fef" compoundref="_methods_8hpp" startline="7638" endline="7641">nc::sin</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1acb62c703a1f96333bf76ad0735cb8b97" compoundref="_rotations_8hpp" startline="257" endline="260">j</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1aa2eee61d3a428a558f28d1bb6cc6a048" compoundref="_rotations_8hpp" startline="269" endline="272">k</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a075b6f1befef247f5d638c91e1a451fd" compoundref="_rotations_8hpp" startline="441" endline="444">s</references>
        <references refid="namespacenc_1affd0f5b31b2bd1b9cea9ab54e25dfab2" compoundref="_methods_8hpp" startline="2450" endline="2453">nc::cos</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
        <referencedby refid="classnc_1_1rotations_1_1_d_c_m_1a7a11261d59892e485106cb0f521c807e" compoundref="_rotations_8hpp" startline="873" endline="883">nc::rotations::DCM&lt; dtype &gt;::angleAxisRotation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ab7905c39ef162eb7667abcd3131430ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>static NdArray&lt;double&gt; nc::rotations::Quaternion::angularVelocity</definition>
        <argsstring>(const Quaternion &amp;inQuat1, const Quaternion &amp;inQuat2, double inTime) noexcept</argsstring>
        <name>angularVelocity</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat1</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>angular velocity vector between the two quaternions. The norm of the array is the magnitude</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inQuat1</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inQuat2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inTime</parametername>
</parameternamelist>
<parameterdescription>
<para>(seperation time) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="161" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="161" bodyend="184"/>
        <references refid="classnc_1_1_nd_array_1a0b337bf0d78b306fa0b874631f1bf24e" compoundref="_nd_array_8hpp" startline="3570" endline="3573">nc::NdArray&lt; dtype &gt;::zeros</references>
        <references refid="classnc_1_1_nd_array_1aae29c9fbae3e92ce432703ffd7722d8b" compoundref="_nd_array_8hpp" startline="3533" endline="3544">nc::NdArray&lt; dtype &gt;::transpose</references>
        <references refid="classnc_1_1_nd_array_1a13e5756a193d375c0b52e5929a41ca2f" compoundref="_nd_array_8hpp" startline="1719" endline="1751">nc::NdArray&lt; dtype &gt;::dot</references>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a1ed072758066ed454d9ba0452dc5a2d0" compoundref="_rotations_8hpp" startline="196" endline="199">angularVelocity</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a2006b918951028c977fd975e63c486ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>static Quaternion nc::rotations::Quaternion::fromDCM</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inDcm)</argsstring>
        <name>fromDCM</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inDcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>converts from a direction cosine matrix to a quaternion</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inDcm</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="284" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="284" bodyend="350"/>
        <references refid="classnc_1_1_nd_array_1a232a5e8c426b629dcda9f9d52e8ce905" compoundref="_nd_array_8hpp" startline="3183" endline="3186">nc::NdArray&lt; dtype &gt;::shape</references>
        <references refid="classnc_1_1_shape_1a6f89f699dea6eb89eef19e00c92b223a" compoundref="_shape_8hpp" startline="46">nc::Shape::rows</references>
        <references refid="classnc_1_1_shape_1aae1a3c997648aacaefb60d0e6d0bf10d" compoundref="_shape_8hpp" startline="47">nc::Shape::cols</references>
        <references refid="namespacenc_1af52bc3de3aa137cd5c5ce233ad42f3b0" compoundref="_methods_8hpp" startline="1633" endline="1636">nc::argmax</references>
        <references refid="namespacenc_1acb264011e6e6cd182cc47f67018a6b3c" compoundref="_methods_8hpp" startline="7794" endline="7797">nc::sqrt</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1ae093d333b66b63eeef5704be4a374af2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>static Quaternion nc::rotations::Quaternion::identity</definition>
        <argsstring>() noexcept</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>quaternion identity (0,0,0,1)</para><para><simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="232" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="232" bodyend="235"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a314478702a3da52f2be3f422057d8732" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>static Quaternion nc::rotations::Quaternion::nlerp</definition>
        <argsstring>(const Quaternion &amp;inQuat1, const Quaternion &amp;inQuat2, double inPercent)</argsstring>
        <name>nlerp</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat1</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>linearly interpolates between the two quaternions</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inQuat1</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inQuat2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inPercent</parametername>
</parameternamelist>
<parameterdescription>
<para>[0, 1] </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="362" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="362" bodyend="387"/>
        <references refid="namespacenc_1_1utils_1ab8f33a7e18654f6870deaa8f9c038195" compoundref="_utils_8hpp" startline="52" endline="59">nc::utils::essentiallyEqual</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a5a661b367dff916e8bdb5e28ac608ecd" compoundref="_rotations_8hpp" startline="220" endline="223">i</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1acb62c703a1f96333bf76ad0735cb8b97" compoundref="_rotations_8hpp" startline="257" endline="260">j</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1aa2eee61d3a428a558f28d1bb6cc6a048" compoundref="_rotations_8hpp" startline="269" endline="272">k</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a075b6f1befef247f5d638c91e1a451fd" compoundref="_rotations_8hpp" startline="441" endline="444">s</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1ab055510c1338490b957de867cecaf790" compoundref="_rotations_8hpp" startline="398" endline="401">nlerp</referencedby>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a7a39f199e4d1ad773b93c69e66ae0415" compoundref="_rotations_8hpp" startline="456" endline="502">slerp</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a7a39f199e4d1ad773b93c69e66ae0415" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>static Quaternion nc::rotations::Quaternion::slerp</definition>
        <argsstring>(const Quaternion &amp;inQuat1, const Quaternion &amp;inQuat2, double inPercent)</argsstring>
        <name>slerp</name>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat1</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>spherical linear interpolates between the two quaternions</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inQuat1</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inQuat2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inPercent</parametername>
</parameternamelist>
<parameterdescription>
<para>(0, 1) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="456" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="456" bodyend="502"/>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a4a11c1c0daf982f9367e4541e5735e71" compoundref="_rotations_8hpp" startline="569" endline="573">toNdArray</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1a314478702a3da52f2be3f422057d8732" compoundref="_rotations_8hpp" startline="362" endline="387">nlerp</references>
        <references refid="namespacenc_1a6f71d75583176a599a64647109170a08" compoundref="_methods_8hpp" startline="2231" endline="2234">nc::clip</references>
        <references refid="namespacenc_1affd0f5b31b2bd1b9cea9ab54e25dfab2" compoundref="_methods_8hpp" startline="2450" endline="2453">nc::cos</references>
        <references refid="namespacenc_1a0d66dc207eb871bba26bff4838992fef" compoundref="_methods_8hpp" startline="7638" endline="7641">nc::sin</references>
        <references refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8">Quaternion</references>
        <referencedby refid="classnc_1_1rotations_1_1_quaternion_1a687155cd6469c095941b94a738119da9" compoundref="_rotations_8hpp" startline="513" endline="516">slerp</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a11697b4e29f40fd56b791fa2bc956eb5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>static Quaternion nc::rotations::Quaternion::xRotation</definition>
        <argsstring>(double inAngle)</argsstring>
        <name>xRotation</name>
        <param>
          <type>double</type>
          <declname>inAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a quaternion to rotate about the x-axis by the input angle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>(radians) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="584" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="584" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1aeeaf2e45baa526aa7c31fc03f66ca109" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>static Quaternion nc::rotations::Quaternion::yRotation</definition>
        <argsstring>(double inAngle)</argsstring>
        <name>yRotation</name>
        <param>
          <type>double</type>
          <declname>inAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a quaternion to rotate about the y-axis by the input angle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>(radians) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="598" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="598" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1rotations_1_1_quaternion_1a02ffc6360355ca7f4d125a70b8930315" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>static Quaternion nc::rotations::Quaternion::zRotation</definition>
        <argsstring>(double inAngle)</argsstring>
        <name>zRotation</name>
        <param>
          <type>double</type>
          <declname>inAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a quaternion to rotate about the y-axis by the input angle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>(radians) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="612" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="612" bodyend="615"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnc_1_1rotations_1_1_quaternion_1a6b7cbc0cd1087f742488b555aef19c10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;inOStream, const Quaternion &amp;inQuat) noexcept</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>inOStream</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>inQuat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IO operator for the <ref refid="classnc_1_1rotations_1_1_quaternion" kindref="compound">Quaternion</ref> class</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inOStream</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inQuat</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ostream&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="850" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="850" bodyend="854"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds a unit quaternion. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="33">
        <label>nc::rotations::Quaternion</label>
        <link refid="classnc_1_1rotations_1_1_quaternion"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" line="53" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/src/NumCpp/Rotations.hpp" bodystart="52" bodyend="855"/>
    <listofallmembers>
      <member refid="classnc_1_1rotations_1_1_quaternion_1aafb38c20ae954808d18179e227223bd9" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>angleAxisRotation</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ab7905c39ef162eb7667abcd3131430ea" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>angularVelocity</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a1ed072758066ed454d9ba0452dc5a2d0" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>angularVelocity</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ade406544e8360506bb77102d17b14e61" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>conjugate</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ac5bfff33006b91593264660913a08786" prot="private" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>data_</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a2006b918951028c977fd975e63c486ab" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>fromDCM</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a5a661b367dff916e8bdb5e28ac608ecd" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>i</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ae093d333b66b63eeef5704be4a374af2" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>identity</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a9b0634474b2ff27f9443ba256ea00ab1" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>inverse</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1acb62c703a1f96333bf76ad0735cb8b97" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>j</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1aa2eee61d3a428a558f28d1bb6cc6a048" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>k</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a314478702a3da52f2be3f422057d8732" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>nlerp</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ab055510c1338490b957de867cecaf790" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>nlerp</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ae9d47af3f78d727f62588a0f209f01f1" prot="private" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>normalize</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1adcf57fd29d62e19f5c764750262ff7c3" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator!=</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1adad6ca92266f6090930addc585900805" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator*</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ad63920fa01f5bd4949c0fbb3ff7c7137" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator*</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1af3870229595bf00f7afe33f186fbb349" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator*</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1aaaa8a1bd7130e7ce6a819284584a84c5" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator*=</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a17636913a3a1e810a81a558dc986fd54" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator*=</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a53c84fdd06a1f980c7c74a185d568156" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator+</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1af2b75597d538e55cfdd1215c35c9c6fe" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator+=</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ad6eb2370d77e01a944c4b32a48966e76" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator-</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a60f1f33144c887cde1338fd80183638f" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator-=</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ab054e067fc333a48582e291f95120866" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator/</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a859df40774ccff755560604b930c934d" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator/=</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a6b7cbc0cd1087f742488b555aef19c10" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator&lt;&lt;</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a82f40acb2292256faffab2b88aa38208" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>operator==</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a44994f000aba8de9f11a169a62782ebd" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>print</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ae4b67d060aa58aa6d22813d6ab851ec8" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a3ba2fb2c68554ec78a0957dc1fd7752d" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1addcc7fb7b4acd4201e7f5b90ef207f4d" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ac0d338fe7e9bb4a3a9ab2386f3f4f7c4" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>rotate</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a075b6f1befef247f5d638c91e1a451fd" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>s</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a7a39f199e4d1ad773b93c69e66ae0415" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>slerp</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a687155cd6469c095941b94a738119da9" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>slerp</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1ad03a97f148be61e687944af11fe45c99" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>str</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a32d6c7cf2ff12d988e169fd936aaf397" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>toDCM</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a4a11c1c0daf982f9367e4541e5735e71" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>toNdArray</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a11697b4e29f40fd56b791fa2bc956eb5" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>xRotation</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1aeeaf2e45baa526aa7c31fc03f66ca109" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>yRotation</name></member>
      <member refid="classnc_1_1rotations_1_1_quaternion_1a02ffc6360355ca7f4d125a70b8930315" prot="public" virt="non-virtual"><scope>nc::rotations::Quaternion</scope><name>zRotation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
